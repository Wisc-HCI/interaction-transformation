# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_fsm')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_fsm')
    _fsm = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_fsm', [dirname(__file__)])
        except ImportError:
            import _fsm
            return _fsm
        try:
            _mod = imp.load_module('_fsm', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _fsm = swig_import_helper()
    del swig_import_helper
else:
    import _fsm
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

PRIuPTR = _fsm.PRIuPTR
PRIdPTR = _fsm.PRIdPTR
LLU = _fsm.LLU
LLO = _fsm.LLO
LLX = _fsm.LLX
false = _fsm.false
true = _fsm.true
OUTCOME_GENERIC_ERROR = _fsm.OUTCOME_GENERIC_ERROR
OUTCOME_PARSER_ERROR = _fsm.OUTCOME_PARSER_ERROR
OUTCOME_SYNTAX_ERROR = _fsm.OUTCOME_SYNTAX_ERROR
OUTCOME_FILE_ERROR = _fsm.OUTCOME_FILE_ERROR
OUTCOME_SUCCESS_REQUIRED_HELP = _fsm.OUTCOME_SUCCESS_REQUIRED_HELP
OUTCOME_SUCCESS = _fsm.OUTCOME_SUCCESS

def Fsm_init() -> "void":
    """Fsm_init()"""
    return _fsm.Fsm_init()

def Fsm_quit() -> "void":
    """Fsm_quit()"""
    return _fsm.Fsm_quit()

def FsmBuilder_create(dd: 'DdManager *') -> "FsmBuilder_ptr":
    """FsmBuilder_create(DdManager * dd) -> FsmBuilder_ptr"""
    return _fsm.FsmBuilder_create(dd)

def FsmBuilder_destroy(arg1: 'FsmBuilder_ptr') -> "void":
    """FsmBuilder_destroy(FsmBuilder_ptr arg1)"""
    return _fsm.FsmBuilder_destroy(arg1)

def FsmBuilder_create_scalar_sexp_fsm(arg1: 'FsmBuilder_ptr const', flat_hierarchy: 'FlatHierarchy_ptr', vars_list: 'Set_t const') -> "SexpFsm_ptr":
    """FsmBuilder_create_scalar_sexp_fsm(FsmBuilder_ptr const arg1, FlatHierarchy_ptr flat_hierarchy, Set_t const vars_list) -> SexpFsm_ptr"""
    return _fsm.FsmBuilder_create_scalar_sexp_fsm(arg1, flat_hierarchy, vars_list)

def FsmBuilder_create_boolean_sexp_fsm(arg1: 'FsmBuilder_ptr const', flat_hierarchy: 'FlatHierarchy_ptr', vars: 'Set_t const', bdd_enc: 'BddEnc_ptr', det_layer: 'SymbLayer_ptr') -> "BoolSexpFsm_ptr":
    """FsmBuilder_create_boolean_sexp_fsm(FsmBuilder_ptr const arg1, FlatHierarchy_ptr flat_hierarchy, Set_t const vars, BddEnc_ptr bdd_enc, SymbLayer_ptr det_layer) -> BoolSexpFsm_ptr"""
    return _fsm.FsmBuilder_create_boolean_sexp_fsm(arg1, flat_hierarchy, vars, bdd_enc, det_layer)

def FsmBuilder_create_bdd_fsm(arg1: 'FsmBuilder_ptr const', enc: 'BddEnc_ptr', sexp_fsm: 'SexpFsm_ptr const', trans_type: 'TransType const') -> "BddFsm_ptr":
    """FsmBuilder_create_bdd_fsm(FsmBuilder_ptr const arg1, BddEnc_ptr enc, SexpFsm_ptr const sexp_fsm, TransType const trans_type) -> BddFsm_ptr"""
    return _fsm.FsmBuilder_create_bdd_fsm(arg1, enc, sexp_fsm, trans_type)

def FsmBuilder_create_bdd_fsm_of_vars(arg1: 'FsmBuilder_ptr const', sexp_fsm: 'SexpFsm_ptr const', trans_type: 'TransType const', enc: 'BddEnc_ptr', state_vars_cube: 'BddVarSet_ptr', input_vars_cube: 'BddVarSet_ptr', next_state_vars_cube: 'BddVarSet_ptr') -> "BddFsm_ptr":
    """FsmBuilder_create_bdd_fsm_of_vars(FsmBuilder_ptr const arg1, SexpFsm_ptr const sexp_fsm, TransType const trans_type, BddEnc_ptr enc, BddVarSet_ptr state_vars_cube, BddVarSet_ptr input_vars_cube, BddVarSet_ptr next_state_vars_cube) -> BddFsm_ptr"""
    return _fsm.FsmBuilder_create_bdd_fsm_of_vars(arg1, sexp_fsm, trans_type, enc, state_vars_cube, input_vars_cube, next_state_vars_cube)

def FsmBuilder_clusterize_expr(arg1: 'FsmBuilder_ptr', enc: 'BddEnc_ptr', expr: 'Expr_ptr') -> "ClusterList_ptr":
    """FsmBuilder_clusterize_expr(FsmBuilder_ptr arg1, BddEnc_ptr enc, Expr_ptr expr) -> ClusterList_ptr"""
    return _fsm.FsmBuilder_clusterize_expr(arg1, enc, expr)
# This file is compatible with both classic and new-style classes.


