# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_prop')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_prop')
    _prop = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_prop', [dirname(__file__)])
        except ImportError:
            import _prop
            return _prop
        try:
            _mod = imp.load_module('_prop', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _prop = swig_import_helper()
    del swig_import_helper
else:
    import _prop
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

PRIuPTR = _prop.PRIuPTR
PRIdPTR = _prop.PRIdPTR
LLU = _prop.LLU
LLO = _prop.LLO
LLX = _prop.LLX
false = _prop.false
true = _prop.true
OUTCOME_GENERIC_ERROR = _prop.OUTCOME_GENERIC_ERROR
OUTCOME_PARSER_ERROR = _prop.OUTCOME_PARSER_ERROR
OUTCOME_SYNTAX_ERROR = _prop.OUTCOME_SYNTAX_ERROR
OUTCOME_FILE_ERROR = _prop.OUTCOME_FILE_ERROR
OUTCOME_SUCCESS_REQUIRED_HELP = _prop.OUTCOME_SUCCESS_REQUIRED_HELP
OUTCOME_SUCCESS = _prop.OUTCOME_SUCCESS
Prop_NoStatus = _prop.Prop_NoStatus
Prop_Unchecked = _prop.Prop_Unchecked
Prop_True = _prop.Prop_True
Prop_False = _prop.Prop_False
Prop_Number = _prop.Prop_Number
PROP_NOSTATUS_STRING = _prop.PROP_NOSTATUS_STRING
PROP_UNCHECKED_STRING = _prop.PROP_UNCHECKED_STRING
PROP_TRUE_STRING = _prop.PROP_TRUE_STRING
PROP_FALSE_STRING = _prop.PROP_FALSE_STRING
PROP_NUMBER_STRING = _prop.PROP_NUMBER_STRING
Prop_Prop_Type_First = _prop.Prop_Prop_Type_First
Prop_NoType = _prop.Prop_NoType
Prop_Ctl = _prop.Prop_Ctl
Prop_Ltl = _prop.Prop_Ltl
Prop_Psl = _prop.Prop_Psl
Prop_Invar = _prop.Prop_Invar
Prop_Compute = _prop.Prop_Compute
Prop_CompId = _prop.Prop_CompId
Prop_Prop_Type_Last = _prop.Prop_Prop_Type_Last
PROPDB_PRINT_FMT_TABULAR = _prop.PROPDB_PRINT_FMT_TABULAR
PROPDB_PRINT_FMT_DEFAULT = _prop.PROPDB_PRINT_FMT_DEFAULT
PROPDB_PRINT_FMT_XML = _prop.PROPDB_PRINT_FMT_XML
PROP_PRINT_FMT_FORMULA = _prop.PROP_PRINT_FMT_FORMULA
PROP_PRINT_FMT_FORMULA_TRUNC = _prop.PROP_PRINT_FMT_FORMULA_TRUNC
PROP_PRINT_FMT_INDEX = _prop.PROP_PRINT_FMT_INDEX
PROP_PRINT_FMT_NAME = _prop.PROP_PRINT_FMT_NAME
PROP_PRINT_FMT_DEFAULT = _prop.PROP_PRINT_FMT_DEFAULT
PROP_NOTYPE_STRING = _prop.PROP_NOTYPE_STRING
PROP_CTL_STRING = _prop.PROP_CTL_STRING
PROP_LTL_STRING = _prop.PROP_LTL_STRING
PROP_PSL_STRING = _prop.PROP_PSL_STRING
PROP_INVAR_STRING = _prop.PROP_INVAR_STRING
PROP_COMPUTE_STRING = _prop.PROP_COMPUTE_STRING

def Prop_create() -> "Prop_ptr":
    """Prop_create() -> Prop_ptr"""
    return _prop.Prop_create()

def Prop_create_partial(expr: 'Expr_ptr', type: 'Prop_Type') -> "Prop_ptr":
    """Prop_create_partial(Expr_ptr expr, Prop_Type type) -> Prop_ptr"""
    return _prop.Prop_create_partial(expr, type)

def Prop_destroy(arg1: 'Prop_ptr') -> "void":
    """Prop_destroy(Prop_ptr arg1)"""
    return _prop.Prop_destroy(arg1)

def Prop_get_expr(arg1: 'Prop_ptr const') -> "Expr_ptr":
    """Prop_get_expr(Prop_ptr const arg1) -> Expr_ptr"""
    return _prop.Prop_get_expr(arg1)

def Prop_get_expr_core(arg1: 'Prop_ptr const') -> "Expr_ptr":
    """Prop_get_expr_core(Prop_ptr const arg1) -> Expr_ptr"""
    return _prop.Prop_get_expr_core(arg1)

def Prop_get_expr_core_for_coi(arg1: 'Prop_ptr const') -> "Expr_ptr":
    """Prop_get_expr_core_for_coi(Prop_ptr const arg1) -> Expr_ptr"""
    return _prop.Prop_get_expr_core_for_coi(arg1)

def Prop_get_cone(arg1: 'Prop_ptr const') -> "Set_t":
    """Prop_get_cone(Prop_ptr const arg1) -> Set_t"""
    return _prop.Prop_get_cone(arg1)

def Prop_get_type(arg1: 'Prop_ptr const') -> "Prop_Type":
    """Prop_get_type(Prop_ptr const arg1) -> Prop_Type"""
    return _prop.Prop_get_type(arg1)

def Prop_get_type_as_string(arg1: 'Prop_ptr') -> "char const *":
    """Prop_get_type_as_string(Prop_ptr arg1) -> char const *"""
    return _prop.Prop_get_type_as_string(arg1)

def Prop_get_name(arg1: 'Prop_ptr const') -> "node_ptr":
    """Prop_get_name(Prop_ptr const arg1) -> node_ptr"""
    return _prop.Prop_get_name(arg1)

def Prop_get_status(arg1: 'Prop_ptr const') -> "Prop_Status":
    """Prop_get_status(Prop_ptr const arg1) -> Prop_Status"""
    return _prop.Prop_get_status(arg1)

def Prop_get_status_as_string(arg1: 'Prop_ptr const') -> "char const *":
    """Prop_get_status_as_string(Prop_ptr const arg1) -> char const *"""
    return _prop.Prop_get_status_as_string(arg1)

def Prop_get_number(arg1: 'Prop_ptr const') -> "int":
    """Prop_get_number(Prop_ptr const arg1) -> int"""
    return _prop.Prop_get_number(arg1)

def Prop_get_number_as_string(arg1: 'Prop_ptr const') -> "char *":
    """Prop_get_number_as_string(Prop_ptr const arg1) -> char *"""
    return _prop.Prop_get_number_as_string(arg1)

def Prop_get_trace(arg1: 'Prop_ptr const') -> "int":
    """Prop_get_trace(Prop_ptr const arg1) -> int"""
    return _prop.Prop_get_trace(arg1)

def Prop_set_cone(arg1: 'Prop_ptr', cone: 'Set_t') -> "void":
    """Prop_set_cone(Prop_ptr arg1, Set_t cone)"""
    return _prop.Prop_set_cone(arg1, cone)

def Prop_set_status(arg1: 'Prop_ptr', s: 'Prop_Status') -> "void":
    """Prop_set_status(Prop_ptr arg1, Prop_Status s)"""
    return _prop.Prop_set_status(arg1, s)

def Prop_set_number(arg1: 'Prop_ptr', n: 'int') -> "void":
    """Prop_set_number(Prop_ptr arg1, int n)"""
    return _prop.Prop_set_number(arg1, n)

def Prop_set_number_infinite(arg1: 'Prop_ptr') -> "void":
    """Prop_set_number_infinite(Prop_ptr arg1)"""
    return _prop.Prop_set_number_infinite(arg1)

def Prop_set_number_undefined(arg1: 'Prop_ptr') -> "void":
    """Prop_set_number_undefined(Prop_ptr arg1)"""
    return _prop.Prop_set_number_undefined(arg1)

def Prop_set_trace(arg1: 'Prop_ptr', t: 'int') -> "void":
    """Prop_set_trace(Prop_ptr arg1, int t)"""
    return _prop.Prop_set_trace(arg1, t)

def Prop_get_index(arg1: 'Prop_ptr const') -> "int":
    """Prop_get_index(Prop_ptr const arg1) -> int"""
    return _prop.Prop_get_index(arg1)

def Prop_set_index(arg1: 'Prop_ptr', index: 'int const') -> "void":
    """Prop_set_index(Prop_ptr arg1, int const index)"""
    return _prop.Prop_set_index(arg1, index)

def Prop_set_name(arg1: 'Prop_ptr', name: 'node_ptr const') -> "void":
    """Prop_set_name(Prop_ptr arg1, node_ptr const name)"""
    return _prop.Prop_set_name(arg1, name)

def Prop_get_name_as_string(arg1: 'Prop_ptr const') -> "char *":
    """Prop_get_name_as_string(Prop_ptr const arg1) -> char *"""
    return _prop.Prop_get_name_as_string(arg1)

def Prop_needs_rewriting(arg1: 'Prop_ptr const') -> "boolean":
    """Prop_needs_rewriting(Prop_ptr const arg1) -> boolean"""
    return _prop.Prop_needs_rewriting(arg1)

def Prop_compute_ground_sexp_fsm(arg1: 'Prop_ptr const', builder: 'FsmBuilder_ptr const', symb_table: 'SymbTable_ptr const') -> "SexpFsm_ptr":
    """Prop_compute_ground_sexp_fsm(Prop_ptr const arg1, FsmBuilder_ptr const builder, SymbTable_ptr const symb_table) -> SexpFsm_ptr"""
    return _prop.Prop_compute_ground_sexp_fsm(arg1, builder, symb_table)

def Prop_compute_ground_bdd_fsm(arg1: 'Prop_ptr const', builder: 'FsmBuilder_ptr const') -> "BddFsm_ptr":
    """Prop_compute_ground_bdd_fsm(Prop_ptr const arg1, FsmBuilder_ptr const builder) -> BddFsm_ptr"""
    return _prop.Prop_compute_ground_bdd_fsm(arg1, builder)

def Prop_compute_ground_be_fsm(arg1: 'Prop_ptr const', builder: 'FsmBuilder_ptr const') -> "BeFsm_ptr":
    """Prop_compute_ground_be_fsm(Prop_ptr const arg1, FsmBuilder_ptr const builder) -> BeFsm_ptr"""
    return _prop.Prop_compute_ground_be_fsm(arg1, builder)

def Prop_get_scalar_sexp_fsm(arg1: 'Prop_ptr const') -> "SexpFsm_ptr":
    """Prop_get_scalar_sexp_fsm(Prop_ptr const arg1) -> SexpFsm_ptr"""
    return _prop.Prop_get_scalar_sexp_fsm(arg1)

def Prop_get_bool_sexp_fsm(arg1: 'Prop_ptr const') -> "BoolSexpFsm_ptr":
    """Prop_get_bool_sexp_fsm(Prop_ptr const arg1) -> BoolSexpFsm_ptr"""
    return _prop.Prop_get_bool_sexp_fsm(arg1)

def Prop_get_bdd_fsm(arg1: 'Prop_ptr const') -> "BddFsm_ptr":
    """Prop_get_bdd_fsm(Prop_ptr const arg1) -> BddFsm_ptr"""
    return _prop.Prop_get_bdd_fsm(arg1)

def Prop_get_be_fsm(arg1: 'Prop_ptr const') -> "BeFsm_ptr":
    """Prop_get_be_fsm(Prop_ptr const arg1) -> BeFsm_ptr"""
    return _prop.Prop_get_be_fsm(arg1)

def Prop_set_scalar_sexp_fsm(arg1: 'Prop_ptr', fsm: 'SexpFsm_ptr') -> "void":
    """Prop_set_scalar_sexp_fsm(Prop_ptr arg1, SexpFsm_ptr fsm)"""
    return _prop.Prop_set_scalar_sexp_fsm(arg1, fsm)

def Prop_set_bool_sexp_fsm(arg1: 'Prop_ptr', fsm: 'BoolSexpFsm_ptr') -> "void":
    """Prop_set_bool_sexp_fsm(Prop_ptr arg1, BoolSexpFsm_ptr fsm)"""
    return _prop.Prop_set_bool_sexp_fsm(arg1, fsm)

def Prop_set_bdd_fsm(arg1: 'Prop_ptr', fsm: 'BddFsm_ptr') -> "void":
    """Prop_set_bdd_fsm(Prop_ptr arg1, BddFsm_ptr fsm)"""
    return _prop.Prop_set_bdd_fsm(arg1, fsm)

def Prop_set_be_fsm(arg1: 'Prop_ptr', fsm: 'BeFsm_ptr') -> "void":
    """Prop_set_be_fsm(Prop_ptr arg1, BeFsm_ptr fsm)"""
    return _prop.Prop_set_be_fsm(arg1, fsm)

def Prop_compute_cone(arg1: 'Prop_ptr const', hierarchy: 'FlatHierarchy_ptr', symb_table: 'SymbTable_ptr') -> "Set_t":
    """Prop_compute_cone(Prop_ptr const arg1, FlatHierarchy_ptr hierarchy, SymbTable_ptr symb_table) -> Set_t"""
    return _prop.Prop_compute_cone(arg1, hierarchy, symb_table)

def Prop_apply_coi_for_scalar(arg1: 'Prop_ptr', helper: 'FsmBuilder_ptr', hierarchy: 'FlatHierarchy_ptr', symb_table: 'SymbTable_ptr') -> "void":
    """Prop_apply_coi_for_scalar(Prop_ptr arg1, FsmBuilder_ptr helper, FlatHierarchy_ptr hierarchy, SymbTable_ptr symb_table)"""
    return _prop.Prop_apply_coi_for_scalar(arg1, helper, hierarchy, symb_table)

def Prop_apply_coi_for_bdd(arg1: 'Prop_ptr', helper: 'FsmBuilder_ptr') -> "void":
    """Prop_apply_coi_for_bdd(Prop_ptr arg1, FsmBuilder_ptr helper)"""
    return _prop.Prop_apply_coi_for_bdd(arg1, helper)

def Prop_apply_coi_for_bmc(arg1: 'Prop_ptr', helper: 'FsmBuilder_ptr') -> "void":
    """Prop_apply_coi_for_bmc(Prop_ptr arg1, FsmBuilder_ptr helper)"""
    return _prop.Prop_apply_coi_for_bmc(arg1, helper)

def Prop_destroy_coi_for_bmc(arg1: 'Prop_ptr') -> "void":
    """Prop_destroy_coi_for_bmc(Prop_ptr arg1)"""
    return _prop.Prop_destroy_coi_for_bmc(arg1)

def Prop_verify(arg1: 'Prop_ptr') -> "void":
    """Prop_verify(Prop_ptr arg1)"""
    return _prop.Prop_verify(arg1)

def Prop_print(arg1: 'Prop_ptr', arg2: 'FILE *', fmt: 'Prop_PrintFmt') -> "void":
    """Prop_print(Prop_ptr arg1, FILE * arg2, Prop_PrintFmt fmt)"""
    return _prop.Prop_print(arg1, arg2, fmt)

def Prop_print_db(arg1: 'Prop_ptr', arg2: 'FILE *', arg3: 'PropDb_PrintFmt') -> "void":
    """Prop_print_db(Prop_ptr arg1, FILE * arg2, PropDb_PrintFmt arg3)"""
    return _prop.Prop_print_db(arg1, arg2, arg3)

def Prop_check_type(arg1: 'Prop_ptr const', type: 'Prop_Type') -> "int":
    """Prop_check_type(Prop_ptr const arg1, Prop_Type type) -> int"""
    return _prop.Prop_check_type(arg1, type)

def Prop_get_text(arg1: 'Prop_ptr const') -> "char *":
    """Prop_get_text(Prop_ptr const arg1) -> char *"""
    return _prop.Prop_get_text(arg1)

def Prop_get_context_text(arg1: 'Prop_ptr const') -> "char *":
    """Prop_get_context_text(Prop_ptr const arg1) -> char *"""
    return _prop.Prop_get_context_text(arg1)

def Prop_is_psl_ltl(arg1: 'Prop_ptr const') -> "boolean":
    """Prop_is_psl_ltl(Prop_ptr const arg1) -> boolean"""
    return _prop.Prop_is_psl_ltl(arg1)

def Prop_is_psl_obe(arg1: 'Prop_ptr const') -> "boolean":
    """Prop_is_psl_obe(Prop_ptr const arg1) -> boolean"""
    return _prop.Prop_is_psl_obe(arg1)

def PropType_to_string(type: 'Prop_Type const') -> "char const *":
    """PropType_to_string(Prop_Type const type) -> char const *"""
    return _prop.PropType_to_string(type)

def PropDb_create() -> "PropDb_ptr":
    """PropDb_create() -> PropDb_ptr"""
    return _prop.PropDb_create()

def PropDb_destroy(arg1: 'PropDb_ptr') -> "void":
    """PropDb_destroy(PropDb_ptr arg1)"""
    return _prop.PropDb_destroy(arg1)

def PropDb_clean(arg1: 'PropDb_ptr') -> "void":
    """PropDb_clean(PropDb_ptr arg1)"""
    return _prop.PropDb_clean(arg1)

def PropDb_fill(arg1: 'PropDb_ptr', symb_table: 'SymbTable_ptr', arg3: 'node_ptr', arg4: 'node_ptr', arg5: 'node_ptr', arg6: 'node_ptr', arg7: 'node_ptr') -> "int":
    """PropDb_fill(PropDb_ptr arg1, SymbTable_ptr symb_table, node_ptr arg3, node_ptr arg4, node_ptr arg5, node_ptr arg6, node_ptr arg7) -> int"""
    return _prop.PropDb_fill(arg1, symb_table, arg3, arg4, arg5, arg6, arg7)

def PropDb_add(arg1: 'PropDb_ptr', arg2: 'Prop_ptr') -> "boolean":
    """PropDb_add(PropDb_ptr arg1, Prop_ptr arg2) -> boolean"""
    return _prop.PropDb_add(arg1, arg2)

def PropDb_prop_create_and_add(arg1: 'PropDb_ptr', symb_table: 'SymbTable_ptr', arg3: 'node_ptr', arg4: 'Prop_Type') -> "int":
    """PropDb_prop_create_and_add(PropDb_ptr arg1, SymbTable_ptr symb_table, node_ptr arg3, Prop_Type arg4) -> int"""
    return _prop.PropDb_prop_create_and_add(arg1, symb_table, arg3, arg4)

def PropDb_get_size(arg1: 'PropDb_ptr const') -> "int":
    """PropDb_get_size(PropDb_ptr const arg1) -> int"""
    return _prop.PropDb_get_size(arg1)

def PropDb_set_master(arg1: 'PropDb_ptr', prop: 'Prop_ptr') -> "Prop_ptr":
    """PropDb_set_master(PropDb_ptr arg1, Prop_ptr prop) -> Prop_ptr"""
    return _prop.PropDb_set_master(arg1, prop)

def PropDb_get_master(arg1: 'PropDb_ptr const') -> "Prop_ptr":
    """PropDb_get_master(PropDb_ptr const arg1) -> Prop_ptr"""
    return _prop.PropDb_get_master(arg1)

def PropDb_set_fsm_to_master(arg1: 'PropDb_ptr', prop: 'Prop_ptr') -> "void":
    """PropDb_set_fsm_to_master(PropDb_ptr arg1, Prop_ptr prop)"""
    return _prop.PropDb_set_fsm_to_master(arg1, prop)

def PropDb_master_get_scalar_sexp_fsm(arg1: 'PropDb_ptr const') -> "SexpFsm_ptr":
    """PropDb_master_get_scalar_sexp_fsm(PropDb_ptr const arg1) -> SexpFsm_ptr"""
    return _prop.PropDb_master_get_scalar_sexp_fsm(arg1)

def PropDb_master_get_bool_sexp_fsm(arg1: 'PropDb_ptr const') -> "BoolSexpFsm_ptr":
    """PropDb_master_get_bool_sexp_fsm(PropDb_ptr const arg1) -> BoolSexpFsm_ptr"""
    return _prop.PropDb_master_get_bool_sexp_fsm(arg1)

def PropDb_master_get_bdd_fsm(arg1: 'PropDb_ptr const') -> "BddFsm_ptr":
    """PropDb_master_get_bdd_fsm(PropDb_ptr const arg1) -> BddFsm_ptr"""
    return _prop.PropDb_master_get_bdd_fsm(arg1)

def PropDb_master_get_be_fsm(arg1: 'PropDb_ptr const') -> "BeFsm_ptr":
    """PropDb_master_get_be_fsm(PropDb_ptr const arg1) -> BeFsm_ptr"""
    return _prop.PropDb_master_get_be_fsm(arg1)

def PropDb_master_set_scalar_sexp_fsm(arg1: 'PropDb_ptr', fsm: 'SexpFsm_ptr') -> "void":
    """PropDb_master_set_scalar_sexp_fsm(PropDb_ptr arg1, SexpFsm_ptr fsm)"""
    return _prop.PropDb_master_set_scalar_sexp_fsm(arg1, fsm)

def PropDb_master_set_bool_sexp_fsm(arg1: 'PropDb_ptr', fsm: 'BoolSexpFsm_ptr') -> "void":
    """PropDb_master_set_bool_sexp_fsm(PropDb_ptr arg1, BoolSexpFsm_ptr fsm)"""
    return _prop.PropDb_master_set_bool_sexp_fsm(arg1, fsm)

def PropDb_master_set_bdd_fsm(arg1: 'PropDb_ptr', fsm: 'BddFsm_ptr') -> "void":
    """PropDb_master_set_bdd_fsm(PropDb_ptr arg1, BddFsm_ptr fsm)"""
    return _prop.PropDb_master_set_bdd_fsm(arg1, fsm)

def PropDb_master_set_be_fsm(arg1: 'PropDb_ptr', fsm: 'BeFsm_ptr') -> "void":
    """PropDb_master_set_be_fsm(PropDb_ptr arg1, BeFsm_ptr fsm)"""
    return _prop.PropDb_master_set_be_fsm(arg1, fsm)

def PropDb_get_prop_at_index(arg1: 'PropDb_ptr const', num: 'int') -> "Prop_ptr":
    """PropDb_get_prop_at_index(PropDb_ptr const arg1, int num) -> Prop_ptr"""
    return _prop.PropDb_get_prop_at_index(arg1, num)

def PropDb_get_prop_name_index(arg1: 'PropDb_ptr const', name: 'node_ptr const') -> "int":
    """PropDb_get_prop_name_index(PropDb_ptr const arg1, node_ptr const name) -> int"""
    return _prop.PropDb_get_prop_name_index(arg1, name)

def PropDb_prop_parse_name(arg1: 'PropDb_ptr const', str: 'char const *') -> "int":
    """PropDb_prop_parse_name(PropDb_ptr const arg1, char const * str) -> int"""
    return _prop.PropDb_prop_parse_name(arg1, str)

def PropDb_get_last(arg1: 'PropDb_ptr const') -> "Prop_ptr":
    """PropDb_get_last(PropDb_ptr const arg1) -> Prop_ptr"""
    return _prop.PropDb_get_last(arg1)

def PropDb_get_print_fmt(arg1: 'PropDb_ptr const') -> "PropDb_PrintFmt":
    """PropDb_get_print_fmt(PropDb_ptr const arg1) -> PropDb_PrintFmt"""
    return _prop.PropDb_get_print_fmt(arg1)

def PropDb_set_print_fmt(arg1: 'PropDb_ptr const', new_fmt: 'PropDb_PrintFmt') -> "PropDb_PrintFmt":
    """PropDb_set_print_fmt(PropDb_ptr const arg1, PropDb_PrintFmt new_fmt) -> PropDb_PrintFmt"""
    return _prop.PropDb_set_print_fmt(arg1, new_fmt)

def PropDb_print_list_header(arg1: 'PropDb_ptr const', file: 'FILE *') -> "void":
    """PropDb_print_list_header(PropDb_ptr const arg1, FILE * file)"""
    return _prop.PropDb_print_list_header(arg1, file)

def PropDb_print_list_footer(arg1: 'PropDb_ptr const', file: 'FILE *') -> "void":
    """PropDb_print_list_footer(PropDb_ptr const arg1, FILE * file)"""
    return _prop.PropDb_print_list_footer(arg1, file)

def PropDb_print_prop_at_index(arg1: 'PropDb_ptr const', file: 'FILE *', index: 'int const') -> "int":
    """PropDb_print_prop_at_index(PropDb_ptr const arg1, FILE * file, int const index) -> int"""
    return _prop.PropDb_print_prop_at_index(arg1, file, index)

def PropDb_print_all(arg1: 'PropDb_ptr const', file: 'FILE *') -> "void":
    """PropDb_print_all(PropDb_ptr const arg1, FILE * file)"""
    return _prop.PropDb_print_all(arg1, file)

def PropDb_print_all_type(arg1: 'PropDb_ptr const', file: 'FILE *', type: 'Prop_Type') -> "void":
    """PropDb_print_all_type(PropDb_ptr const arg1, FILE * file, Prop_Type type)"""
    return _prop.PropDb_print_all_type(arg1, file, type)

def PropDb_print_all_status(arg1: 'PropDb_ptr const', file: 'FILE *', status: 'Prop_Status') -> "void":
    """PropDb_print_all_status(PropDb_ptr const arg1, FILE * file, Prop_Status status)"""
    return _prop.PropDb_print_all_status(arg1, file, status)

def PropDb_print_all_status_type(arg1: 'PropDb_ptr const', file: 'FILE *', status: 'Prop_Status', type: 'Prop_Type') -> "void":
    """PropDb_print_all_status_type(PropDb_ptr const arg1, FILE * file, Prop_Status status, Prop_Type type)"""
    return _prop.PropDb_print_all_status_type(arg1, file, status, type)

def PropDb_get_props_of_type(arg1: 'PropDb_ptr const', type: 'Prop_Type const') -> "lsList":
    """PropDb_get_props_of_type(PropDb_ptr const arg1, Prop_Type const type) -> lsList"""
    return _prop.PropDb_get_props_of_type(arg1, type)

def PropDb_get_ordered_props_of_type(arg1: 'PropDb_ptr const', hierarchy: 'FlatHierarchy_ptr const', type: 'Prop_Type const') -> "lsList":
    """PropDb_get_ordered_props_of_type(PropDb_ptr const arg1, FlatHierarchy_ptr const hierarchy, Prop_Type const type) -> lsList"""
    return _prop.PropDb_get_ordered_props_of_type(arg1, hierarchy, type)

def PropDb_prop_parse_and_add(arg1: 'PropDb_ptr const', symb_table: 'SymbTable_ptr', str: 'char const *', type: 'Prop_Type const') -> "int":
    """PropDb_prop_parse_and_add(PropDb_ptr const arg1, SymbTable_ptr symb_table, char const * str, Prop_Type const type) -> int"""
    return _prop.PropDb_prop_parse_and_add(arg1, symb_table, str, type)

def PropDb_get_prop_index_from_string(arg1: 'PropDb_ptr const', idx: 'char const *') -> "int":
    """PropDb_get_prop_index_from_string(PropDb_ptr const arg1, char const * idx) -> int"""
    return _prop.PropDb_get_prop_index_from_string(arg1, idx)

def PropDb_get_prop_index_from_trace_index(arg1: 'PropDb_ptr const', trace_idx: 'int const') -> "int":
    """PropDb_get_prop_index_from_trace_index(PropDb_ptr const arg1, int const trace_idx) -> int"""
    return _prop.PropDb_get_prop_index_from_trace_index(arg1, trace_idx)

def PropDb_verify_all(arg1: 'PropDb_ptr const') -> "void":
    """PropDb_verify_all(PropDb_ptr const arg1)"""
    return _prop.PropDb_verify_all(arg1)

def PropDb_verify_all_type(arg1: 'PropDb_ptr const', arg2: 'Prop_Type') -> "void":
    """PropDb_verify_all_type(PropDb_ptr const arg1, Prop_Type arg2)"""
    return _prop.PropDb_verify_all_type(arg1, arg2)

def PropDb_ordered_verify_all(arg1: 'PropDb_ptr const', hierarchy: 'FlatHierarchy_ptr const') -> "void":
    """PropDb_ordered_verify_all(PropDb_ptr const arg1, FlatHierarchy_ptr const hierarchy)"""
    return _prop.PropDb_ordered_verify_all(arg1, hierarchy)

def PropDb_ordered_verify_all_type(arg1: 'PropDb_ptr const', hierarchy: 'FlatHierarchy_ptr const', type: 'Prop_Type const') -> "void":
    """PropDb_ordered_verify_all_type(PropDb_ptr const arg1, FlatHierarchy_ptr const hierarchy, Prop_Type const type)"""
    return _prop.PropDb_ordered_verify_all_type(arg1, hierarchy, type)

def PropDb_verify_prop_at_index(arg1: 'PropDb_ptr const', index: 'int const') -> "void":
    """PropDb_verify_prop_at_index(PropDb_ptr const arg1, int const index)"""
    return _prop.PropDb_verify_prop_at_index(arg1, index)

def PropDb_get_ordered_properties(arg1: 'PropDb_ptr const', hierarchy: 'FlatHierarchy_ptr const') -> "NodeList_ptr":
    """PropDb_get_ordered_properties(PropDb_ptr const arg1, FlatHierarchy_ptr const hierarchy) -> NodeList_ptr"""
    return _prop.PropDb_get_ordered_properties(arg1, hierarchy)

def PropDb_get_coi_grouped_properties(arg1: 'PropDb_ptr const', hierarchy: 'FlatHierarchy_ptr const') -> "NodeList_ptr":
    """PropDb_get_coi_grouped_properties(PropDb_ptr const arg1, FlatHierarchy_ptr const hierarchy) -> NodeList_ptr"""
    return _prop.PropDb_get_coi_grouped_properties(arg1, hierarchy)

def PropPkg_init_cmd() -> "void":
    """PropPkg_init_cmd()"""
    return _prop.PropPkg_init_cmd()

def PropPkg_quit_cmd() -> "void":
    """PropPkg_quit_cmd()"""
    return _prop.PropPkg_quit_cmd()

def PropPkg_init() -> "void":
    """PropPkg_init()"""
    return _prop.PropPkg_init()

def PropPkg_quit() -> "void":
    """PropPkg_quit()"""
    return _prop.PropPkg_quit()

def PropPkg_get_prop_database() -> "PropDb_ptr":
    """PropPkg_get_prop_database() -> PropDb_ptr"""
    return _prop.PropPkg_get_prop_database()

def PropPkg_set_prop_database(db: 'PropDb_ptr') -> "void":
    """PropPkg_set_prop_database(PropDb_ptr db)"""
    return _prop.PropPkg_set_prop_database(db)
# This file is compatible with both classic and new-style classes.


