-- Model of a simple admin system
--
-- by Simon Busard <simon.busard@uclouvain.be>, 01/03/2011

MODULE main

    VAR
        state : {starting, choosing, waiting, processing};
        admin : {none, alice, bob};
        
    INIT state = starting & admin = none
    
    TRANS
        next(state) =   case
                            state = starting :      choosing;
                            state = choosing :      waiting;
                            state = waiting :       processing;
                            state = processing :    waiting;
                        esac
    
    TRANS
        next(admin) in  case
                            state = choosing :  {alice, bob};
                            TRUE :              admin;
                        esac
                        
                        
SPEC EF(admin = alice) -> AG(admin != none -> admin = alice)
SPEC AF AG(state = processing)
SPEC AF AG(state in {processing, waiting})

SPEC EG EX state = processing

SPEC AF(admin = alice)
SPEC AX(admin = bob)